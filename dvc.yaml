stages:
  process_and_load_data:
    cmd: python src/load_and_save_good_data.py  --config=params.yaml
    deps:
      - src/get_data.py
      - src/data_processing.py
      - src/load_and_save_good_data.py
      - Training_Batch_Files
    outs:
      - data/after_handling_imbalance/sample_data.csv
      - data/null_data/null_data.csv
      - data/processed/good_data.csv

  split_data:
      cmd: python src/split_data.py --config=params.yaml
      deps:
      - src/split_data.py
      - data/processed/good_data.csv
      outs:
      - data/processed/train_data.csv
      - data/processed/test_data.csv

  train_evaluate:
    cmd: python src/train_and_evaluate.py --config=params.yaml
    deps:
    - data/processed/train_data.csv
    - data/processed/test_data.csv 
    - src/train_and_evaluate.py
    params:
    - estimators.DecisionTree.params.max_depth
    - estimators.DecisionTree.params.min_samples_leaf
    - estimators.DecisionTree.params.criterion
    # metrics:
    # - reports/scores.json:
    #     cache: false
    # - reports/params.json:
    #     cache: false
    # outs:
    # - saved_models/model.joblib

  # log_production_model:
  #   cmd: python src/log_production_model.py --config=params.yaml
  #   deps: 
  #   - src/log_production_model.py 